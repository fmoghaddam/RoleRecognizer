plugins {
    id 'org.hidetake.ssh' version '2.8.0'
}

plugins {
  id 'fi.jasoft.plugin.vaadin' version '1.0'
}

plugins {
    id "de.undercouch.download" version "3.2.0"
}

apply plugin: 'eclipse-wtp'
apply plugin: 'java'
apply plugin: 'de.undercouch.download'


repositories {
    jcenter()
    maven {
        url "http://maven.vaadin.com/vaadin-addons"
    }
}

dependencies {
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	compile "com.byteowls:vaadin-chartjs:0.4.0"
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.24'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    testCompile 'junit:junit:4.12'
	compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.7.0'
	compile "org.deeplearning4j:deeplearning4j-core:0.8.0"
    compile "org.nd4j:nd4j-native-platform:0.8.0"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

vaadin {
    version '7.7.3'
    vaadin.logToConsole true
}

task unzip(type: Copy,dependsOn: ':downloadFile') {
    def zipFile = file('src/main/resources/RoleDetectorResources.rar')
    def outputDir = file('src/main/resources/')
 
    from zipTree(zipFile)
    into outputDir
}

import de.undercouch.gradle.tasks.download.Download

task downloadFile(type: Download) {    
   	src 'https://dl.dropboxusercontent.com/s/q2foq82lsuag6wq/resources.zip?dl=0'
    dest 'src/main/resources/RoleDetectorResources.rar'
    overwrite false
    onlyIfNewer true
}

task deployToTomcat(type: Copy,dependsOn: ':war') {
    from war.archivePath
    into "/home/fbm/Downloads/apache-tomcat-8.5.20/webapps"
}

task startTomcat(dependsOn: deployToTomcat, type: Exec) {
     commandLine '/home/fbm/Downloads/apache-tomcat-8.5.20/bin/catalina.sh','run'
}

ssh.settings {
    dryRun = project.hasProperty('dryRun')
}

remotes {
    server {
        host = '10.10.4.10'
        user = 'farshad'
        identity = file("${System.properties['user.home']}/.ssh/id_rsa")
    }
}

task deployWarToServer(dependsOn: war) << {
    ssh.run {
        session(remotes.server) {
        	//execute 'pkill -9 -f tomcat'
         	execute 'rm -rf /home/farshad/apache-tomcat-8.5.15/webapps/RoleRecognizer'
         	execute 'rm -rf /home/farshad/apache-tomcat-8.5.15/webapps/RoleRecognizer.war'         	         
            put from: './build/libs/RoleRecognizer.war', into: '/home/farshad/apache-tomcat-8.5.15/webapps'            
            execute 'cd /home/farshad/apache-tomcat-8.5.15/bin && ./catalina.sh run'                        
        }
    }
}
